<% if (standalone) { %>import {CommonModule} from '@angular/common';
<% } %>import {ChangeDetectionStrategy, Component, OnDestroy, OnInit, ViewEncapsulation} from '@angular/core';
import {O3rComponent} from '@o3r/core';
import {Subscription} from 'rxjs';
<% if (useContext) { %>import {<%= componentContext %>} from './<%= name %>.context';
<% } %>
@O3rComponent({
  componentType: '<%= componentType %>'
})
@Component({
  selector: '<%= componentSelector %>-pres',<% if (standalone) { %>
  standalone: true,
  imports: [CommonModule],<% } %>
  styleUrls: ['./<%= name %>.style.scss'],
  templateUrl: './<%= name %>.template.html',
  changeDetection: ChangeDetectionStrategy.OnPush,
  encapsulation: ViewEncapsulation.None
})
export class <%= componentName %> implements
  OnInit,
  OnDestroy<% if (useContext) { %>,
  <%= componentContext %><% } %> {
  /**
   * List of subscriptions to unsubscribe on destroy
   */
  private subscriptions: Subscription[] = [];

  public ngOnInit() {
    // Run on component initialization
  }

  public ngOnDestroy() {
    // Run on component destruction
    this.subscriptions.forEach((subscription) => subscription.unsubscribe());
  }
}
