name: 'Setup'
description: 'Setup for Otter Library'

inputs:
  enable-build-cache:
    description: 'Enable Cache'
    required: false
    default: 'false'
  cache-build-identifier:
    description: 'Custom identifier to build cache key'
    required: false
    default: 'global'

runs:
  using: "composite"
  steps:
    - uses: actions/setup-node@v3
      with:
        node-version: 18
    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: |
          .yarn/cache
          .yarn/unplugged
          .pnp.cjs
          .pnp.loader.mjs
        key: ${{ runner.os }}-deps-${{ hashFiles('yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-deps-
          ${{ runner.os }}-
    - name: Cache build
      if: inputs.enable-build-cache == 'true'
      uses: actions/cache@v3
      env:
        hash: ${{ hashFiles('package.json', 'tsconfig.base.json', 'tsconfig.build.json', 'nx.json') }}
      with:
        path: |
          .cache/nx
          .cache/angular
          node_modules/.cache/ng-packagr
          node_modules/.cache/nx
        key: ${{ runner.os }}-build-${{ env.hash }}-${{ inputs.cache-build-identifier }}-${{ github.ref_name }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.hash }}-${{ inputs.cache-build-identifier }}-${{ github.event_name == 'pull_request' && github.base_ref || 'main' }}
          ${{ runner.os }}-build-${{ env.hash }}-${{ inputs.cache-build-identifier }}-
          ${{ runner.os }}-build-${{ env.hash }}-global-
          ${{ runner.os }}-build-${{ env.hash }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-
    - name: Install
      shell: bash
      run: yarn install
